plank:
  default_decoration_config:
    utility_images: # using the tag we identified above
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20190917-395658c48"
      initupload: "gcr.io/k8s-prow/initupload:v20190917-395658c48"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190917-395658c48"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190917-395658c48"
    gcs_configuration:
      bucket: prow_job_bucket # the bucket we just made
      path_strategy: explicit
    gcs_credentials_secret: gcs-credentials # the secret we just made

prowjob_namespace: default
pod_namespace: test-pods

tide:
  merge_method:
    multicloudlab/oasis: squash
    multicloudlab/mygit: squash
    multicloudlab/test-infra: squash
    multicloudlab/tools: squash
    IBM/go-repo-template: squash
    IBM/test-infra: squash

  target_url: http://35.227.205.240/tide

  queries:
  - repos:
    - multicloudlab/oasis
    - multicloudlab/mygit
    - multicloudlab/test-infra
    - multicloudlab/tools
    - IBM/go-repo-template
    - IBM/test-infra
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - do-not-merge/invalid-owners-file
    - needs-rebase

  context_options:
    # Use branch protection options to define required and optional contexts
    from-branch-protection: true
    # Treat unknown contexts as optional
    skip-unknown-contexts: true

presets:
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
    value: /etc/service-account/service-account.json
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
  volumes:
  - name: service
    secret:
      secretName: service-account
# Enable GOPROXY by default
- env:
  - name: GOPROXY
    value: "https://proxy.golang.org"
  - name: BUILD_WITH_CONTAINER
    value: "0"